name: CI to Docker Hub

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/dockerdemo:v1.0.1

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        
      - name: Upload a coverage Artifact dotcover
        uses: actions/upload-artifact@v2.2.4
        with:
        # Artifact name
         name: artifact 
         path: /home/runner/.docker/config.json
        
        
      - name: Docker verification
        run: docker run hello-world

      - name: Download the latest release with the command
        run: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

      - name: Install kubectl
        run: sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl    
        
      - name: Download Minikube
        run: curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
      - name: Install  Minikube
        run: sudo install minikube-linux-amd64 /usr/local/bin/minikube
        
      - name: Start Minikube
        run: minikube start --driver=docker
       
      - name: Create a Secret
        run: kubectl create secret generic regcred --from-file=/home/runner/.docker/config.json
             
             
             
        
             
             
